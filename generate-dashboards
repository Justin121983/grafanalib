#!/usr/bin/env python3
# -*- mode: python; python-indent-offset: 2 -*-

import argparse
import os
import sys

from grafanalib.gen import DashboardError, load_dashboard, write_dashboard


DASHBOARD_SUFFIX = '.dashboard.py'


def write_dashboards(paths):
  for path in paths:
    dashboard = load_dashboard(path)
    with open(get_json_path(path), 'w') as json_file:
      write_dashboard(dashboard, json_file)


def get_json_path(path):
  assert path.endswith(DASHBOARD_SUFFIX)
  return '{}.json'.format(path[:-len(DASHBOARD_SUFFIX)])


def dashboard_path(path):
  abspath = os.path.abspath(path)
  if not abspath.endswith(DASHBOARD_SUFFIX):
    raise argparse.ArgumentTypeError(
      'Dashboard file {} does not end with {}'.format(path, DASHBOARD_SUFFIX))
  return abspath


def main(args):
  parser = argparse.ArgumentParser(prog='generate-dashboard')
  parser.add_argument(
    'dashboards', metavar='DASHBOARD', type=os.path.abspath,
    nargs='+', help='Path to dashboard definition',
  )
  opts = parser.parse_args(args)
  try:
    write_dashboards(opts.dashboards)
  except DashboardError as e:
    sys.stderr.write('ERROR: {}\n'.format(e))
    return 1
  return 0


sys.exit(main(sys.argv[1:]))
